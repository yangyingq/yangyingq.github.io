{"meta":{"title":"Hexo","subtitle":"","description":"","author":"John Doe","url":"http://yoursite.com","root":"/"},"pages":[],"posts":[{"title":"通过git指令将文件上传到github仓库的步骤","slug":"通过git指令将文件上传到github仓库的步骤","date":"2019-11-13T06:07:16.000Z","updated":"2019-11-13T07:59:13.161Z","comments":true,"path":"2019/11/13/通过git指令将文件上传到github仓库的步骤/","link":"","permalink":"http://yoursite.com/2019/11/13/%E9%80%9A%E8%BF%87git%E6%8C%87%E4%BB%A4%E5%B0%86%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%88%B0github%E4%BB%93%E5%BA%93%E7%9A%84%E6%AD%A5%E9%AA%A4/","excerpt":"","text":"windows下上传文件夹我们回到git bash的命令窗口，由于我们是在文件夹上右键打开的，因此已经定位到该文件夹目录了。可以通过pwd命令查看文件夹位置： pwd #查看文件夹位置 然后，将该文件夹变成Git可以管理的仓库： git init 然后通过git add将所有文件提交到暂存区： git add . 由于是第一次提交，需要将所有文件都进行提交，如果一个一个的提交太麻烦，通过. 命令可以将所有文件都进行提交。 再然后，git commit -m ‘说明’提交到版本库中即可。 git commit -m ‘the initial edition’ 这样我们便在本地建立好了仓库，接下来需要将本地仓库与GitHub网站的仓库进行关联。后面的网址是我们刚才在GitHub网站上建立的仓库位置，可以从网站上进行复制，如下： git remote add origin https://github.com/geerniya/MxShop2.git 在将本地仓库与GitHub网站上的仓库进行关联后，便可进行推送了，但是在第一次进行推送时，需要注意的是，GitHub网站上的仓库并非是空的，我们在创建时创建了一个README文档，因此需要将两者进行合并才行。 git pull –rebase origin master 最后，在进行推送即可。 git push -u origin master 这个带有-u这个参数是指，将master分支的所有内容都提交，第一次关联之后后边你再提交就可以不用这个参数了，之后你的每一次修改，你就可以只将你修改push就好了。 git push origin master git remote rm origin 如果提示remote already exist 可以用将其删除。重新开始之后的步骤及可。","categories":[],"tags":[]},{"title":"如何搭建HEXO博客","slug":"My-first-blog","date":"2019-11-11T09:39:17.000Z","updated":"2019-11-13T07:44:18.678Z","comments":true,"path":"2019/11/11/My-first-blog/","link":"","permalink":"http://yoursite.com/2019/11/11/My-first-blog/","excerpt":"","text":"搭建过程这里我们使用的是命令行搭建（基于windows10系统的静态博客搭建） 环境的搭建这里我们直接到https://nodejs.org 官网去下载 我们选择左边的进行下载安装，下载成功后进行安装，我们不断点击下一步就可以了。 在控制台可以使用node -v 查看nodejs 的版本 由于国内镜像源npm速度过慢，所以我们这里用的是cnpm,通过淘宝源进行下载 npm install -g cnpm –registry=https://registry.npm.taobao.org 然后通过cnpm下载hexo博客 cnpm install -g hexo-cli 安装成功之后我们可以用hexo -v查看hexo的版本，可以看出hexo是基于nodejs的 搭建博客安装完成之后我们创建一个博客的主目录。我们之后所有的操作都是基于在这个目录之下的。 我们这里是在D盘下直接创建了blog的一个文件夹，通过控制台进入我们刚刚创建的blog文件夹 开始搭建我们的博客，将所需要的文件克隆到blog这个文件夹下 D:\\blog&gt;hexo init 这条指令需要我们安装好git工具，不然会失败，我们先去下载安装好git。这里我推荐csdn博主日出东方vs唯我不败的一篇关于Git的安装博文，以下是链接地址 https://blog.csdn.net/qq_32786873/article/details/80570783 安装完Git之后，我们还要配置环境，看看path路径里有没有Git的路径配置，如果没有就添加。添加的是你Git的安装目录下的bin路径 成功之后在控制台输入git命令,如果出现下图的结果就表示安装成功了。 安装完Git之后，我们通过hexo s 开启博客，然后下面会提示我们通过localhost:4000来访问我们的在本机上的一个静态博客 我们在浏览器的url栏输入localhost:4000,可以看到博客已经搭建成功 这时博客上只有一些实例的博客文章。下面我们开始创建我们的博客，通过hexo n+”博客名”来创建。 如 hexo n “通过git指令将文件上传到github仓库的步骤” 这时候下面命令行会出现提示创建信息。这里我们创建的是一个.md文件，可以通过markdown编辑器将其打开和编辑，如何使用markdown编辑器，感兴趣的同学可以自行上网查找，我们这里不多做描述。 重新启动博客 hexo s，还是通过localhost:4000来查看我们的博客，可以看到我们的博客已经创建成功了。 到这一步，我们创建的是在本机的博客，只能在自己的机器上查看的博客，那我们如何放到网上来查看呢？这边我们有两种方法，一种是有域名和服务器的同学可以将博客放到服务器上，没有的可以将博客部署到GitHub上。我们这里演示的是将博客部署到github上 先在自己的GitHub上创建一个github仓库。 登录GitHub后首页右上角有个加号，点击后有new repository的选项，点击进行新建仓库 账户名我们这里要写自己的GitHub账号名+.github.io 比如我自己的GitHub账户是yangyingq，我使用的名字是yangyingq.github.io，这里我之前已经创建过了所以他报了个提醒 description 仓库的的描述，选择public，然后点击create repository就创建成功了，这时候里面还什么都没有，不用去管它执行下一步。 先回到我们的控制台，我们执行命令cnpm install –save hexo-deployer-git 执行完之后我们必须去修改一个非常重要的文件。 blog文件夹下的__config.yml，用记事本打开它，找到#Deployment并添加下面这些东西 冒号后记得加个空格。 这里的url是我们刚刚创建的仓库的url 编写完后保存退出。回到控制台，使用 D:\\blog&gt;hexo d 将博客部署到GitHub上 这时候会弹出窗口叫你输入GitHub的账户密码 输入账号密码。等待一会，部署就成功了，这时候我们重新回到我们github仓库，刷新，这时候我们会发现多了很多东西，这些就是你自己的博客。 这时候我们就可以通过https://yangyingq.github.io来访问我们的博客。 主题的修改：这是GitHub上的一个样式主题，如果你不想换，也可以沿用原来的主题。git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia 这个过程在window10上可能有点久，我们耐心等待一下。 下载完之后我们blog文件夹下就会多了一个theme的文件包，打开theme文件包中的_config.yml，修改其中的theme:landscape 变为theme:yilia,保存退出。 重新生成和部署一下，我们就可以我们博客的主题就改变了。 hexo 的指令 清理：hexo clean 重新生成：hexo g 重新部署：hexo d","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2019-11-11T09:24:51.464Z","updated":"2019-11-11T09:24:51.464Z","comments":true,"path":"2019/11/11/hello-world/","link":"","permalink":"http://yoursite.com/2019/11/11/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}